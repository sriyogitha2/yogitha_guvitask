 CREATE TABLE Movies (
    ->     MovieID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Title VARCHAR(255) NOT NULL,
    ->     ReleaseDate DATE,
    ->     Duration INT,
    ->     Description TEXT
    -> );

mysql>
mysql> CREATE TABLE Media (
    ->     MediaID INT AUTO_INCREMENT PRIMARY KEY,
    ->     MovieID INT,
    ->     MediaType ENUM('Video', 'Image') NOT NULL,
    ->     URL VARCHAR(255),
    ->     FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)
    -> );


mysql>
mysql> CREATE TABLE Genres (
    ->     GenreID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Name VARCHAR(50) NOT NULL UNIQUE
    -> );

mysql> CREATE TABLE MovieGenres (
    ->     MovieID INT,
    ->     GenreID INT,
    ->     PRIMARY KEY (MovieID, GenreID),
    ->     FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
    ->     FOREIGN KEY (GenreID) REFERENCES Genres(GenreID)
    -> );


mysql> CREATE TABLE Users (
    ->     UserID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Name VARCHAR(100),
    ->     Email VARCHAR(100) UNIQUE
    -> );



mysql> CREATE TABLE Reviews (
    ->     ReviewID INT AUTO_INCREMENT PRIMARY KEY,
    ->     MovieID INT,
    ->     UserID INT,
    ->     Rating DECIMAL(3, 2),
    ->     Comment TEXT,
    ->     FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
    ->     FOREIGN KEY (UserID) REFERENCES Users(UserID)
    -> );



mysql> CREATE TABLE Artists (
    ->     ArtistID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Name VARCHAR(100),
    ->     DOB DATE
    -> );



mysql> CREATE TABLE Skills (
    ->     SkillID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Name VARCHAR(100) NOT NULL UNIQUE
    -> );



mysql> CREATE TABLE ArtistSkills (
    ->     ArtistID INT,
    ->     SkillID INT,
    ->     PRIMARY KEY (ArtistID, SkillID),
    ->     FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID),
    ->     FOREIGN KEY (SkillID) REFERENCES Skills(SkillID)
    -> );



mysql> CREATE TABLE Roles (
    ->     RoleID INT AUTO_INCREMENT PRIMARY KEY,
    ->     Name VARCHAR(100) NOT NULL UNIQUE
    -> );


mysql> CREATE TABLE ArtistRoles (
    ->     ArtistID INT,
    ->     MovieID INT,
    ->     RoleID INT,
    ->     PRIMARY KEY (ArtistID, MovieID, RoleID),
    ->     FOREIGN KEY (ArtistID) REFERENCES Artists(ArtistID),
    ->     FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
    ->     FOREIGN KEY (RoleID) REFERENCES Roles(RoleID)
    -> );


mysql> INSERT INTO Movies (Title, ReleaseDate, Duration, Description)
    -> VALUES
    -> ('Inception', '2010-07-16', 148, 'A mind-bending thriller by Christopher Nolan.'),
    -> ('The Godfather', '1972-03-24', 175, 'A story of a mafia family.'),
    -> ('Interstellar', '2014-11-07', 169, 'A journey through space and time.');



mysql> INSERT INTO Media (MovieID, MediaType, URL)
    -> VALUES
    -> (1, 'Video', 'https://example.com/inception_trailer.mp4'),
    -> (1, 'Image', 'https://example.com/inception_poster.jpg'),
    -> (2, 'Image', 'https://example.com/godfather_poster.jpg'),
    -> (3, 'Video', 'https://example.com/interstellar_trailer.mp4');



mysql> INSERT INTO Genres (Name)
    -> VALUES
    -> ('Thriller'), ('Drama'), ('Sci-Fi'), ('Crime'), ('Adventure');



mysql> INSERT INTO MovieGenres (MovieID, GenreID)
    -> VALUES
    -> (1, 1), (1, 3),
    -> (2, 2), (2, 4),
    -> (3, 3), (3, 5);



mysql> INSERT INTO Users (Name, Email)
    -> VALUES
    -> ('John Doe', 'john.doe@example.com'),
    -> ('Jane Smith', 'jane.smith@example.com'),
    -> ('Alice Johnson', 'alice.johnson@example.com');



mysql> INSERT INTO Reviews (MovieID, UserID, Rating, Comment)
    -> VALUES
    -> (1, 1, 4.5, 'Amazing visuals and storyline.'),
    -> (2, 2, 5.0, 'A masterpiece of cinema.'),
    -> (3, 3, 4.8, 'Mind-blowing concepts and execution.');


mysql> INSERT INTO Artists (Name, DOB)
    -> VALUES
    -> ('Leonardo DiCaprio', '1974-11-11'),
    -> ('Marlon Brando', '1924-04-03'),
    -> ('Matthew McConaughey', '1969-11-04');

mysql>
mysql> INSERT INTO Skills (Name)
    -> VALUES
    -> ('Acting'), ('Directing'), ('Writing'), ('Cinematography');


mysql>
mysql> INSERT INTO ArtistSkills (ArtistID, SkillID)
    -> VALUES
    -> (1, 1), (1, 2),
    -> (2, 1),
    -> (3, 1), (3, 4);

mysql>
mysql> INSERT INTO Roles (Name)
    -> VALUES
    -> ('Actor'), ('Director'), ('Writer'), ('Producer');

mysql>
mysql> INSERT INTO ArtistRoles (ArtistID, MovieID, RoleID)
    -> VALUES
    -> (1, 1, 1), (1, 1, 2),
    -> (2, 2, 1),
    -> (3, 3, 1), (3, 3, 4);





mysql> SELECT
    ->     Movies.MovieID,
    ->     Movies.Title AS MovieTitle,
    ->     Movies.ReleaseDate,
    ->     Movies.Duration,
    ->     Movies.Description,
    ->     GROUP_CONCAT(DISTINCT Media.MediaType) AS MediaTypes,
    ->     GROUP_CONCAT(DISTINCT Media.URL) AS MediaURLs,
    ->     GROUP_CONCAT(DISTINCT Genres.Name) AS Genres,
    ->     Users.Name AS Reviewer,
    ->     Reviews.Rating,
    ->     Reviews.Comment,
    ->     GROUP_CONCAT(DISTINCT Artists.Name) AS ArtistNames,
    ->     GROUP_CONCAT(DISTINCT Skills.Name) AS Skills,
    ->     GROUP_CONCAT(DISTINCT Roles.Name) AS Roles
    -> FROM
    ->     Movies
    -> LEFT JOIN
    ->     Media ON Movies.MovieID = Media.MovieID
    -> LEFT JOIN
    ->     MovieGenres ON Movies.MovieID = MovieGenres.MovieID
    -> LEFT JOIN
    ->     Genres ON MovieGenres.GenreID = Genres.GenreID
    -> LEFT JOIN
    ->     Reviews ON Movies.MovieID = Reviews.MovieID
    -> LEFT JOIN
    ->     Users ON Reviews.UserID = Users.UserID
    -> LEFT JOIN
    ->     ArtistRoles ON Movies.MovieID = ArtistRoles.MovieID
    -> LEFT JOIN
    ->     Artists ON ArtistRoles.ArtistID = Artists.ArtistID
    -> LEFT JOIN
    ->     ArtistSkills ON Artists.ArtistID = ArtistSkills.ArtistID
    -> LEFT JOIN
    ->     Skills ON ArtistSkills.SkillID = Skills.SkillID
    -> LEFT JOIN
    ->     Roles ON ArtistRoles.RoleID = Roles.RoleID
    -> GROUP BY
    ->     Movies.MovieID,
    ->     Movies.Title,
    ->     Movies.ReleaseDate,
    ->     Movies.Duration,
    ->     Movies.Description,
    ->     Users.Name,
    ->     Reviews.Rating,
    ->     Reviews.Comment;






MovieID: Unique identifier for the movie.
MovieTitle: The title of the movie.
ReleaseDate: The release date of the movie.
Duration: The length of the movie in minutes.
Description: A brief description of the movie.
MediaTypes: Types of media available (Video, Image, etc.).
MediaURLs: URLs for the media files related to the movie.
Genres: Genres associated with the movie.
Reviewer: The name of the user who reviewed the movie.
Rating: The rating given by the reviewer (out of 5).
Comment: The review comment provided by the reviewer.
ArtistNames: The names of the artists involved in the movie (e.g., actors).
Skills: Skills associated with the artists (e.g., Acting, Directing).
Roles: The roles played by the artists (e.g., Actor, Director).
This heading provides a concise summary of the data you are viewing in the table format

Movie Details, Media, Reviews, Artists, Skills, and Roles
This output shows the following information for each movie:

+---------+---------------+-------------+----------+-----------------------------------------------+-------------+------------------------------------------------------------------------------------+------------------+---------------+--------+--------------------------------------+---------------------+-----------------------+----------------+
| MovieID | MovieTitle    | ReleaseDate | Duration | Description                                   | MediaTypes  | MediaURLs                                                                          | Genres           | Reviewer      | Rating | Comment                              | ArtistNames         | Skills                | Roles          |
+---------+---------------+-------------+----------+-----------------------------------------------+-------------+------------------------------------------------------------------------------------+------------------+---------------+--------+--------------------------------------+---------------------+-----------------------+----------------+
|       1 | Inception     | 2010-07-16  |      148 | A mind-bending thriller by Christopher Nolan. | Video,Image | https://example.com/inception_poster.jpg,https://example.com/inception_trailer.mp4 | Sci-Fi,Thriller  | John Doe      |   4.50 | Amazing visuals and storyline.       | Leonardo DiCaprio   | Acting,Directing      | Actor,Director |
|       2 | The Godfather | 1972-03-24  |      175 | A story of a mafia family.                    | Image       | https://example.com/godfather_poster.jpg                                           | Crime,Drama      | Jane Smith    |   5.00 | A masterpiece of cinema.             | Marlon Brando       | Acting                | Actor          |
|       3 | Interstellar  | 2014-11-07  |      169 | A journey through space and time.             | Video       | https://example.com/interstellar_trailer.mp4                                       | Adventure,Sci-Fi | Alice Johnson |   4.80 | Mind-blowing concepts and execution. | Matthew McConaughey | Acting,Cinematography | Actor,Producer |
+---------+---------------+-------------+----------+-----------------------------------------------+-------------+------------------------------------------------------------------------------------+------------------+---------------+--------+--------------------------------------+---------------------+---------
	
	